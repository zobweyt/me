---
import { LOCALES, useTranslations } from "@i18n";
import { type CollectionEntry } from "astro:content";
import { getBlogEntries } from "@content/entries";
import PageLayout from "@layouts/PageLayout.astro";
import PostCard from "@components/PostCard.astro";

const t = useTranslations(Astro.currentLocale);

const data = await getBlogEntries({ locale: Astro.currentLocale });

type Acc = {
  [year: string]: CollectionEntry<"blog">[];
};

const posts = data.reduce((acc: Acc, post) => {
  const year = post.data.date.getFullYear().toString();
  // eslint-disable-next-line @typescript-eslint/no-unnecessary-condition, @typescript-eslint/strict-boolean-expressions
  if (!acc[year]) {
    acc[year] = [];
  }
  acc[year].push(post);
  return acc;
}, {});

const years = Object.keys(posts).sort((a, b) => parseInt(b) - parseInt(a));

export const prerender = true;

export async function getStaticPaths() {
  return LOCALES.map((locale) => ({ params: { locale } }));
}
---

<PageLayout title={t("blog.title")} description={t("blog.description")}>
  <div class="space-y-10">
    <hgroup>
      <h1 class="mb-3 text-3xl font-semibold">{t("blog.title")}</h1>
      <p class="text-justify font-serif">{t("blog.description")}</p>
    </hgroup>

    <div class="space-y-4">
      {
        years.map((year) => (
          <section class="space-y-2">
            <div class="sticky top-18.5 z-10 bg-stone-100 py-2 text-lg font-semibold sm:top-14.5">{year}</div>
            <div>
              <ul class="flex flex-col gap-4">
                {posts[year].map((post) => (
                  <li>
                    <PostCard entry={post} />
                  </li>
                ))}
              </ul>
            </div>
          </section>
        ))
      }
    </div>
  </div>
</PageLayout>
