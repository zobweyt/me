---
import type { CollectionEntry } from "astro:content";

import { Image } from "astro:assets";
import { tv } from "tailwind-variants";

const styles = tv({
  slots: {
    root: [
      "relative rounded-lg p-4",
      "transition duration-300 ease-in-out",
      "bg-(--project-card-color)/5 hover:bg-(--project-card-color)/15 active:ring-(--project-card-color)/30",
      "ring ring-inset ring-(--project-card-color)/15 hover:ring-(--project-card-color)/30 active:hover:ring-(--project-card-color)/50",
    ],
    wrapper: "mb-1 flex items-center gap-2",
    logo: "size-6 rounded-full shadow ring ring-black/15",
    title: "text-xl font-semibold leading-normal after:absolute after:inset-0 after:z-10",
    description: "mb-2 font-serif opacity-75",
    date: "font-mono text-sm first-letter:uppercase text-(--project-card-color)",
  },
});

const formatter = new Intl.DateTimeFormat(Astro.currentLocale, { year: "numeric", month: "short" });

type Props = {
  entry: CollectionEntry<"projects">;
};

const { entry } = Astro.props;
---

<div
  class={styles().root()}
  style={{
    "--project-card-color": entry.data.color,
  }}
>
  <div class={styles().wrapper()}>
    <Image
      src={entry.data.logo}
      alt={entry.data.title}
      draggable="false"
      width={24}
      height={24}
      class={styles().logo()}
    />
    <a href={entry.data.href} target="_blank" rel="noopener noreferrer" class={styles().title()}>
      {entry.data.title}
    </a>
  </div>
  <p class={styles().description()}>
    {entry.data.description}
  </p>
  <p class={styles().date()}>
    {
      entry.data.dateEnd
        ? formatter.formatRange(entry.data.dateStart, entry.data.dateEnd)
        : formatter.format(entry.data.dateStart)
    }
  </p>
</div>
